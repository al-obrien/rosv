% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{osv_query}
\alias{osv_query}
\title{Query OSV API for individual package vulnerabilities}
\usage{
osv_query(name = NULL, ecosystem = NULL, page_token = NULL, ...)
}
\arguments{
\item{name}{Name of package(s).}

\item{ecosystem}{Ecosystem(s) package(s) lives within.}

\item{page_token}{When large number of results, next response to complete set requires a page_token.}

\item{...}{Any other parameters to pass to nested functions, currently not used.}
}
\description{
Will connect to OSV API and query vulnerabilities from the specified packages.
Unlike the other query functions, \code{osv_query} will only return content and not
the response object. All vulnerabilities are returned for any versions of the package flagged
in OSV.
}
\details{
Since the 'query' and 'batchquery' API endpoints have different outputs, this
function will align their contents to be a list of vulnerabilities. For 'query' this
meant flattening once, and for 'batchquery' it meant using IDs to fetch the additional
vulnerability information and then flattening the list.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

# Single package
pkg_vul <- osv_query('dask', ecosystem = 'PyPI')

# Batch query
name_vec <- c('dask', 'dash')
ecosystem_vec <- rep('PyPI', length(name_vec))
pkg_vul <- osv_query(name_vec, ecosystem = ecosystem_vec)
\dontshow{\}) # examplesIf}
}
\seealso{
\href{https://ossf.github.io/osv-schema/#affectedpackage-field}{Ecosystem list}
}
